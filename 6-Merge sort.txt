public class MergeSortProgram {
    void MergeSort(int a[], int low, int high) {
        if (low < high) {
            int mid = (low + high) / 2;
            MergeSort(a, low, mid);
            MergeSort(a, mid + 1, high);
            Merge(a, low, mid, high);
        }
    }

    void Merge(int a[], int low, int mid, int high) {
        int h, i, j, k;
        int b[] = new int[20];
        h = low;
        i = low;
        j = mid + 1;
        while ((h <= mid) && (j <= high)) {
            if (a[h] <= a[j]) {
                b[i] = a[h];
                h = h + 1;
            } else {
                b[i] = a[j];
                j = j + 1;
            }
            i = i + 1;
        }
        if (h > mid) {
            for (k = j; k <= high; k++) {
                b[i] = a[k];
                i = i + 1;
            }
        } else
            for (k = h; k <= mid; k++) {
                b[i] = a[k];
                i = i + 1;
            }
        for (k = low; k <= high; k++) {
            a[k] = b[k];
        }
    }


    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        System.out.println("USN:1MJ19CS175 NAME:TANUJA HEGDE");
        System.out.println("Enter the size of n :");
        int n = sc.nextInt();
        int a[] = new int[n + 1];
        System.out.println("Enter the array elements to sort:");
        for (int i = 1; i <= n; i++) {
            a[i] = sc.nextInt();
        }
        MergeSortProgram m = new MergeSortProgram();
        System.out.println("Sorted array element are:");
        m.MergeSort(a, 1, n);
        for (int i = 1; i <= n; i++) {
            System.out.println(a[i]);
        }
    }
}